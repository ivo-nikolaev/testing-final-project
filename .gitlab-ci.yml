stages:
#  - build
  - test

# Build might be exescive as there currently is no use for a build
# In the future, when interface testing is added, it might be usefull to have
# A build  or a test setup phase to make our python image with requirements
# So the different test jobs aren't all downloading the same requirements
#build:
#  stage: build
#  script:
#    - mkdir -p code/test/test_results
#  artifacts:
#    paths:
#      - code/test/test_results/

unit test:
  stage: test
  image: python:3.7
  script:
    - echo "Testing"
    - mkdir -p code/test/test_results  # While build isn't being used it'll run the folder thing here
    - pip install -r requirments.txt
    - pip install pytest
#    - pip install pytest-flask
#    - pip install pytest-flask-sqlalchemy
    - pwd
#    - cd code/test/
    - ls -l
    - export PYTHONPATH="$PYTHONPATH:."
    - python -c "import sys;print(sys.path)"
    - py.test --junitxml code/test/test_results/results.xml -vvv
  artifacts:
    reports:
      junit: code/test/test_results/results.xml

#e2e:firefox:
#  stage: test
#  image: python:3.7
#  script:
#    - pwd
#    - ls -l /builds/dosehunter/testingmandatory2_exam/
#    - pip install pytest
#    - pip install selenium
#    - pip install pytest-selenium
#    - chmod 777 /builds/dosehunter/testingmandatory2_exam/driver/geckodriver
#    - pytest code/test/interface_testing.py
#    - pytest -vvv --driver Remote --capability browserName firefox --host selenium --port 4444 code/test/interface_testing.py
#  services:
#    - name: selenium/standalone-firefox
#      alias: selenium

#e2e:firefox:
#  stage: confidence-check
#  services:
#    - selenium/standalone-firefox
#  script:
#    - npm run confidence-check --host=selenium__standalone-firefox
